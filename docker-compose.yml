services:
  db:
    image: postgres:14
    container_name: uzbbcbot_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data

  redis:
    image: redis:rc-alpine3.12
    container_name: redis_db
    restart: always
    env_file:
      - .env
    ports:
      - "${REDIS_PORT}:6379"

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_drf
    restart: always
    command: >
      sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    volumes:
      - ./src:/src
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      - db

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_app
    restart: always
    env_file:
      - .env
    entrypoint: celery
    command: -A core worker -l info
    volumes:
      - ./src:/src
    links:
      - redis
    depends_on:
      - redis

  celery-beat:
    container_name: celery_beat_app
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: celery -A core beat -l info
    volumes:
      - ./src:/src

  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    container_name: tg_bot
    restart: always
    env_file:
      - .env
    command: python3 telegram_bot/app.py
    links:
      - redis
    depends_on:
      - web
      - redis
    volumes:
      - ./:/app
      - ./logs:/app/logs

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./src/static:/src/static
      - ./src/media:/src/media
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - web


  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - nginx


volumes:
  static_volume:
  media_volume:
  uzbbcbot-db-data:
